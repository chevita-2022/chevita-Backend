plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //querydsl
}

group = 'kbsc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//Maria DB 드라이버 등록
//compile("prg.mariadb.jdbc:mariadb-java-client") -> deprecated
//implementation("prg.mariadb.jdbc:mariadb-java-client")

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Swagger 설정
	implementation("io.springfox:springfox-boot-starter:3.0.0")

	//s3 설정
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	
	//h2 적용
	implementation 'com.h2database:h2'

	//db 연결
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java:'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	// mapstruct
	implementation 'org.mapstruct:mapstruct:1.3.1.Final'
}

tasks.named('test') {
	useJUnitPlatform()
}


def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	compileOnly{
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

project.afterEvaluate {
	project.tasks.compileQuerydsl.options.compilerArgs = [
			"-proc:only",
			"-processor", project.querydsl.processors() +
					',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
	]
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

